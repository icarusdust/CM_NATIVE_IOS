workflows:
    ios-workflow:
      name: ios_workflow
      instance_type: mac_mini_m1
      integrations:
        app_store_connect: Codemagic
      environment:
        groups: 
         - ios
         - firebase_creds
        vars:
          XCODE_WORKSPACE: "CM_NATIVE_IOS.xcworkspace" # <-- Put the name of your workspace here.
          # XCODE_PROJECT: "native_ios_app.xcodeproj"
#           XCODE_SCHEME: "native_ios_app" # <-- Put the name of your scheme here.
          BUNDLE_ID: "io.codemagic.mars.CM-NATIVE-IOS" # <-- Put your Bundle Id here.
          XCODE_SCHEME: "CM_NATIVE_IOS" # <-- Put the name of your scheme here.
          APP_ID: "6473636517"
          xcode: 14.2
        xcode: 15.1
        # ios_signing:
        #     distribution_type: app_store # or: ad_hoc | development | enterprise
        #     bundle_identifier: io.codemagic.mars.CM-NATIVE-IOS   
      scripts:
        - name: Change description value
          script: |
             APP_DESCRIPTION="hi there"
             sed -i.bak -e 's/"text":.*/"text":\"$APP_DESCRIPTION\"/g' release_notes.json
        - name: Pod inst
          script: |
              echo $APP_DESCRIPTION
              pod install
        - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
          script: |
            keychain initialize
        - name: Fetch signing files
          script: |
            app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_STORE --create
        - name: Use system default keychain
          script: |
            keychain add-certificates
        - name: Set up code signing settings on Xcode project
          script: |
             xcode-project use-profiles      
        # - name: iOS test
        #   script: | 
        #     xcode-project run-tests \
        #       --workspace CM_NATIVE_IOS.xcworkspace \
        #       --scheme CM_NATIVE_IOS \
        #       --device "iPhone 13" \
        #       --output-dir build/ios/test
        #   test_report: build/ios/test/*.xml
        - name: Increment build number
          script: |
            #!/bin/sh
            cd $CM_BUILD_DIR
            LATEST_BUILD_NUMBER=$(app-store-connect get-latest-testflight-build-number "$APP_ID")
            agvtool new-version -all $(($LATEST_BUILD_NUMBER + 3))  
        - name: Build ipa for distribution
          script: |
            xcode-project build-ipa --workspace "$CM_BUILD_DIR/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
        - name: Export artifact az zip
          script: |
            cp -r $CM_BUILD_DIR/build/ios/ipa/*.ipa $CM_EXPORT_DIR/artefact
      artifacts:
        - build/ios/ipa/*.ipa
        - $CM_EXPORT_DIR/artefact
#         - build/ios/ipa/bullet.ipa
        - build/ios/test/*.xml
        - /tmp/xcodebuild_logs/*.log
#         - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
#         - /Users/builder/clone/build/ios_integ/Build/Products/ios_tests.zip
      publishing:
       # email:
       #  recipients:
       #    - nihal@nevercode.io
       #  notify:
       #    success: true
       #    failure: false
        app_store_connect:
          auth: integration
          submit_to_testflight: true
          beta_groups: 
              - mars
      #   firebase:
      #       firebase_token: $FIREBASE_TOKEN
      #       # firebase_service_account: $FIREBASE_SERVICE_ACCOUNT        
      #       ios:
      #         app_id: 1:608315409963:ios:7d468bb148397aa50f8c6e 
      #           - mars
